# Occupier
OCCUPATIONAL_POLYGON = [(0, 0), (0, 0), (0, 0)]
HIGHEST_DEMAND_WEIGHT = 2
MIDDLE_DEMAND_WEIGHT = 1
LOWEST_DEMAND_WEIGHT = 0.5

# Define lists of polygons
polygons = [
    # 0-10
    [(189, 274), (218, 269), (335, 287), (330, 335), (357, 374), (391, 378), (399, 421), (410, 450), (333, 432),
     (314, 432), (295, 438), (279, 447), (268, 455), (266, 441), (262, 443), (236, 403), (219, 395), (226, 332),
     (199, 328), (200, 309), (185, 305)],
    [(0, 190), (130, 13), (147, 0), (0, 0)],
    [(144, 0), (130, 12), (0, 191), (0, 415), (29, 428), (234, 458), (269, 456), (268, 442), (262, 442), (235, 399),
     (218, 394), (227, 332), (199, 326), (201, 308), (185, 305), (189, 274), (220, 269), (354, 288), (348, 252),
     (337, 228), (335, 193), (337, 186), (309, 136), (217, 88), (228, 0)],
    [(336, 185), (346, 159), (355, 149), (377, 136), (390, 120), (393, 102), (389, 76), (386, 57), (380, 38), (370, 19),
     (361, 0), (228, 0), (217, 88), (309, 137)],
    [(361, 0), (531, 0), (541, 110), (520, 309), (515, 328), (504, 338), (482, 340), (474, 345), (455, 365), (439, 376),
     (432, 359), (420, 352), (408, 344), (393, 317), (373, 263), (379, 210), (378, 200), (343, 195), (337, 187),
     (342, 167), (357, 150), (377, 137), (389, 120), (393, 103), (390, 78), (387, 56), (381, 38)],
    OCCUPATIONAL_POLYGON,
    [(682, 367), (660, 345), (660, 338), (668, 329), (674, 288), (681, 272), (696, 178), (707, 179), (750, 107),
     (763, 72), (763, 63), (801, 31), (816, 27), (836, 12), (860, 0), (1018, 0), (1008, 10), (1004, 20), (1002, 36),
     (998, 53), (986, 92), (985, 106), (991, 145), (991, 171), (990, 182), (972, 201), (951, 221), (940, 238),
     (911, 265), (888, 275), (865, 311), (829, 326), (786, 328), (707, 327), (697, 336), (689, 356)],
    [(531, 0), (541, 110), (533, 194), (592, 203), (681, 176), (709, 179), (729, 141), (751, 106), (763, 72), (764, 62),
     (804, 29), (818, 27), (835, 11), (864, 0)],
    [(336, 188), (341, 193), (377, 199), (379, 210), (368, 291), (354, 290), (348, 251), (340, 234), (334, 214)],
    [(590, 202), (681, 176), (665, 252), (656, 310), (615, 372), (601, 474), (585, 473), (583, 486), (574, 485),
     (542, 495), (538, 479), (546, 425), (558, 425), (584, 234), (586, 233)],
    [(680, 176), (697, 177), (687, 251), (682, 272), (675, 287), (669, 328), (661, 337), (660, 344), (680, 361),
     (666, 376), (638, 391), (626, 476), (601, 474), (616, 372), (656, 310), (674, 195)],

    # 11-20
    [(669, 498), (750, 507), (803, 516), (829, 483), (903, 451), (981, 407), (1007, 403), (1050, 412), (1050, 0),
     (1019, 0), (1010, 7), (1004, 20), (1001, 42), (989, 85), (985, 94), (987, 108), (993, 145), (991, 177), (986, 186),
     (965, 207), (953, 220), (941, 237), (912, 264), (889, 277), (864, 311), (830, 326), (708, 327), (700, 331),
     (695, 340), (683, 367), (679, 397), (681, 409)],
    [(679, 363), (681, 370), (679, 396), (681, 409), (668, 497), (584, 486), (586, 472), (626, 477), (638, 391),
     (666, 376)],
    OCCUPATIONAL_POLYGON,
    OCCUPATIONAL_POLYGON,
    [(583, 487), (669, 497), (664, 526), (652, 535), (590, 528), (581, 501)],
    [(668, 497), (703, 502), (696, 546), (655, 540), (650, 536), (663, 526)],
    [(704, 502), (698, 546), (763, 555), (773, 554), (803, 515), (749, 505)],
    [(827, 483), (773, 554), (778, 557), (808, 560), (816, 557), (822, 556), (839, 559), (856, 560), (868, 486),
     (833, 480)],
    [(867, 486), (856, 561), (904, 568), (927, 572), (941, 586), (953, 590), (966, 500)],
    [(839, 479), (1049, 512), (1049, 411), (1007, 402), (980, 406), (902, 450)],

    # 21-30
    [(966, 500), (953, 590), (999, 586), (1008, 583), (1039, 585), (1049, 583), (1049, 512)],
    [(584, 532), (652, 576), (670, 584), (692, 589), (697, 545), (656, 538), (649, 535), (617, 531), (591, 527)],
    [(697, 545), (763, 554), (775, 553), (779, 556), (804, 560), (785, 578), (763, 594), (691, 589)],
    [(766, 594), (806, 560), (816, 562), (812, 593), (805, 590), (790, 589)],
    [(811, 559), (820, 557), (856, 560), (849, 601), (813, 595), (811, 593), (815, 562)],
    [(856, 562), (850, 602), (949, 617), (953, 591), (942, 586), (928, 573), (903, 565)],
    [(953, 591), (948, 617), (1004, 625), (1007, 600), (1004, 591), (996, 586), (973, 589)],
    [(1000, 587), (1007, 595), (1003, 625), (1049, 630), (1049, 582), (1038, 585), (1010, 582)],
    [(560, 543), (576, 588), (576, 616), (580, 624), (590, 633), (594, 642), (606, 649), (666, 658), (675, 596),
     (664, 578), (640, 570), (583, 533)],
    OCCUPATIONAL_POLYGON,

    # 31-40
    [(672, 586), (675, 596), (666, 658), (838, 685), (842, 662), (822, 658), (813, 652), (807, 642), (798, 631),
     (790, 608), (781, 598), (766, 595), (743, 595)],
    [(773, 595), (786, 603), (790, 611), (798, 632), (807, 643), (816, 656), (842, 662), (850, 602), (813, 596),
     (807, 591), (791, 588)],
    [(850, 602), (842, 662), (855, 666), (864, 676), (877, 707), (887, 720), (931, 739), (949, 616), (869, 604)],
    [(948, 615), (1031, 708), (1049, 710), (1049, 869), (1013, 871), (991, 859), (982, 835), (967, 810), (958, 775),
     (939, 745), (930, 739)],
    OCCUPATIONAL_POLYGON,
    [(949, 615), (1049, 630), (1049, 712), (1031, 709)],
    OCCUPATIONAL_POLYGON,
    [(666, 659), (660, 700), (833, 728), (838, 685)],
    [(842, 661), (832, 729), (929, 745), (929, 739), (894, 723), (880, 711), (862, 674), (855, 666)],
    OCCUPATIONAL_POLYGON,

    # 41-50
    [(659, 698), (754, 715), (781, 748), (671, 729), (655, 725)],
    [(755, 716), (782, 749), (829, 756), (833, 728), (755, 715)],
    [(832, 729), (829, 757), (958, 776), (939, 745), (931, 739), (928, 744), (909, 739)],
    [(656, 728), (657, 741), (668, 754), (673, 763), (772, 778), (808, 784), (780, 747)],
    [(782, 747), (821, 800), (875, 860), (923, 901), (1049, 972), (1049, 867), (1013, 870), (999, 865), (991, 857),
     (981, 835), (967, 811), (959, 776)],
    [(625, 751), (643, 817), (673, 822), (680, 782), (675, 764), (666, 762), (657, 755)],
    [(674, 764), (680, 781), (673, 822), (868, 853), (809, 785), (772, 780)],
    OCCUPATIONAL_POLYGON,
    [(645, 818), (688, 905), (797, 923), (809, 844), (723, 830)],
    [(809, 845), (797, 923), (886, 937), (887, 926), (902, 905), (902, 885), (867, 853)],

    # 51-60
    OCCUPATIONAL_POLYGON,
    [(704, 910), (717, 935), (722, 962), (713, 1014), (782, 1014), (797, 923)],
    [(798, 924), (782, 1014), (875, 1014), (885, 937)],
    [(886, 938), (887, 925), (900, 909), (902, 884), (928, 903), (1049, 972), (1050, 1015), (874, 1014)],
    [(625, 754), (582, 788), (581, 797), (590, 807), (608, 815), (612, 813), (643, 817)],
    [(594, 643), (624, 749), (660, 756), (672, 762), (659, 744), (656, 726), (659, 699), (665, 658), (606, 648)],
    [(513, 645), (546, 632), (549, 626), (548, 618), (548, 613), (560, 627), (577, 622), (589, 632), (626, 756),
     (603, 772), (584, 751), (564, 732), (545, 714), (529, 689), (521, 671)],
    [(528, 685), (508, 716), (574, 761), (590, 780), (602, 770), (577, 743), (544, 711)],
    [(505, 561), (560, 543), (575, 586), (576, 616), (577, 620), (560, 625), (549, 612), (547, 616), (549, 624),
     (546, 631), (533, 635), (513, 582)],
    [(513, 584), (505, 590), (502, 600), (502, 614), (512, 642), (533, 636)],

    # 61-70
    [(283, 715), (317, 694), (406, 668), (474, 706), (502, 723), (527, 684), (512, 644), (501, 615), (501, 601),
     (504, 590), (512, 583), (504, 559), (492, 564), (489, 561), (479, 566), (470, 565), (464, 535), (437, 542),
     (425, 543), (414, 541), (397, 547), (368, 545), (356, 545), (320, 553), (298, 559), (278, 575), (261, 595),
     (249, 623), (249, 654), (258, 683)],
    [(282, 715), (289, 819), (241, 797), (225, 781), (191, 692), (192, 638), (199, 620), (216, 535), (223, 522),
     (271, 453), (298, 463), (316, 468), (336, 465), (374, 471), (390, 478), (415, 486), (434, 495), (455, 501),
     (465, 507), (474, 519), (460, 525), (462, 536), (438, 542), (429, 542), (413, 541), (396, 546), (358, 544),
     (333, 550), (297, 559), (260, 597), (249, 625), (250, 654), (259, 683)],
    [(272, 454), (317, 469), (337, 466), (373, 471), (422, 490), (442, 499), (450, 491), (428, 462), (407, 447),
     (323, 430), (313, 431), (293, 436)],
    [(0, 415), (29, 428), (237, 458), (271, 455), (256, 477), (220, 527), (197, 638), (190, 640), (154, 608),
     (105, 564), (75, 530), (22, 469), (15, 453), (0, 430)],
    [(0, 428), (18, 459), (42, 488), (75, 529), (104, 560), (149, 603), (172, 624), (192, 643), (192, 692), (184, 702),
     (146, 718), (60, 705), (10, 698), (0, 700)],
    OCCUPATIONAL_POLYGON,
    [(0, 701), (15, 700), (77, 707), (146, 716), (186, 698), (192, 697), (225, 782), (238, 795), (290, 818),
     (0, 819)],
    OCCUPATIONAL_POLYGON,
    [(335, 288), (328, 336), (357, 373), (391, 378), (387, 353), (377, 330), (363, 313), (354, 288)],
    OCCUPATIONAL_POLYGON,

    # 71-80
    [(354, 291), (368, 292), (372, 264), (387, 305), (411, 346), (430, 357), (439, 374), (449, 383), (430, 382),
     (391, 377), (387, 354), (377, 333), (359, 309)],
    [(393, 378), (400, 414), (410, 448), (435, 466), (469, 510), (478, 519), (511, 507), (506, 495), (508, 475),
     (479, 469), (479, 459), (464, 456), (470, 406), (448, 384)],
    [(440, 375), (514, 452), (521, 392), (530, 303), (545, 196), (533, 194), (526, 242), (523, 265), (522, 292),
     (515, 329), (504, 336), (482, 338), (471, 345), (455, 364)],
    [(471, 407), (464, 455), (479, 459), (479, 469), (509, 474), (512, 448)],
    [(529, 303), (514, 452), (524, 477), (539, 478), (546, 425), (559, 427), (585, 233), (586, 232), (591, 203),
     (544, 195)],
    [(513, 449), (506, 493), (511, 507), (532, 498), (542, 495), (537, 478), (524, 475)],
    [(460, 526), (490, 515), (505, 559), (494, 563), (488, 562), (480, 565), (470, 564)],
    [(490, 515), (511, 507), (524, 545), (528, 544), (531, 549), (506, 559)],
    [(511, 507), (532, 498), (548, 544), (532, 550), (528, 544), (524, 545)],
    [(532, 498), (574, 484), (583, 486), (582, 501), (591, 528), (548, 546)]
]

highestDemand_polygons = [77, 78, 79, 80]
middleDemand_polygons = [72, 74, 76, 73, 75, 9, 15, 12, 10, 16, 22, 29, 56, 57, 58, 60, 59, 61, 62, 63]
lowestDemand_polygons = []
for i in range(len(polygons)):
    if i not in highestDemand_polygons + middleDemand_polygons:
        lowestDemand_polygons.append(i)